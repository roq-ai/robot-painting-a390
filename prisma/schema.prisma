generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model client {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?   @db.VarChar(255)
  name        String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  user_id     String    @db.Uuid
  tenant_id   String    @db.VarChar(255)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
}

model design {
  id                String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  design_name       String     @db.VarChar(255)
  creation_date     DateTime?  @db.Date
  modification_date DateTime?  @db.Date
  status            String?    @db.VarChar(255)
  experiment_id     String     @db.Uuid
  user_id           String     @db.Uuid
  created_at        DateTime   @default(now()) @db.Timestamp(6)
  updated_at        DateTime   @default(now()) @db.Timestamp(6)
  experiment        experiment @relation(fields: [experiment_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user              user       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model experiment {
  id              String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  experiment_name String    @db.VarChar(255)
  experiment_date DateTime? @db.Date
  results         String?   @db.VarChar(255)
  project_id      String    @db.Uuid
  user_id         String    @db.Uuid
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime  @default(now()) @db.Timestamp(6)
  design          design[]
  project         project   @relation(fields: [project_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user      @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model project {
  id           String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  project_name String       @db.VarChar(255)
  start_date   DateTime?    @db.Date
  end_date     DateTime?    @db.Date
  status       String?      @db.VarChar(255)
  client_id    String       @db.Uuid
  user_id      String       @db.Uuid
  created_at   DateTime     @default(now()) @db.Timestamp(6)
  updated_at   DateTime     @default(now()) @db.Timestamp(6)
  experiment   experiment[]
  client       client       @relation(fields: [client_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user         user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String       @unique @db.VarChar(255)
  firstName   String?      @db.VarChar(255)
  lastName    String?      @db.VarChar(255)
  roq_user_id String       @db.VarChar(255)
  tenant_id   String       @db.VarChar(255)
  created_at  DateTime     @default(now()) @db.Timestamp(6)
  updated_at  DateTime     @default(now()) @db.Timestamp(6)
  client      client[]
  design      design[]
  experiment  experiment[]
  project     project[]
}
